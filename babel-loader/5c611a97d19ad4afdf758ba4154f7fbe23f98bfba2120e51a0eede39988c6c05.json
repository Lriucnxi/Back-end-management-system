{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { getUser, addUser, editUser, delUser } from \"../api\";\nexport default {\n  data() {\n    //判断年龄是否合法\n    var checkAge = (rule, value, callback) => {\n      if (!value) {\n        return callback(new Error(\"年龄不能为空\"));\n      }\n      setTimeout(() => {\n        if (!Number.isInteger(value)) {\n          callback(new Error(\"请输入数字值\"));\n        } else {\n          if (value < 18) {\n            callback(new Error(\"必须年满18岁\"));\n          } else {\n            callback();\n          }\n        }\n      }, 500);\n    };\n    return {\n      dialogVisible: false,\n      form: {\n        name: \"\",\n        age: \"\",\n        sex: \"\",\n        birth: \"\",\n        addr: \"\"\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: \"请输入姓名\"\n        }],\n        age: [{\n          required: true,\n          validator: checkAge,\n          trigger: \"blur\"\n        }],\n        sex: [{\n          required: true,\n          message: \"请选择性别\"\n        }],\n        birth: [{\n          required: true,\n          message: \"请选择出生日期\"\n        }],\n        addr: [{\n          required: true,\n          message: \"请输入地址\"\n        }]\n      },\n      tableData: [],\n      modalType: 0,\n      //0表示新增弹窗，1表示编辑\n      total: 0,\n      //当前的总条数\n      pageData: {\n        page: 1,\n        limit: 10\n      },\n      userForm: {\n        name: \"\"\n      }\n    };\n  },\n  methods: {\n    //判断用户提交表单\n    submit() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          //后续对表单的处理\n          if (this.modalType === 0) {\n            addUser(this.form).then(() => {\n              //从新获取列表接口\n              this.getList();\n            });\n          } else {\n            editUser(this.form).then(() => {\n              //从新获取列表接口\n              this.getList();\n            });\n          }\n          //清空表单数据\n          this.$refs.form.resetFields();\n          //关闭弹窗\n          this.dialogVisible = false;\n        }\n      });\n    },\n    //弹窗关闭\n    handleClose() {\n      this.$refs.form.resetFields();\n      this.dialogVisible = false;\n    },\n    cancel() {\n      this.handleClose();\n    },\n    handleEdit(row) {\n      this.modalType = 1;\n      this.dialogVisible = true;\n      //注意需要对当前函数进行深拷贝\n      this.form = JSON.parse(JSON.stringify(row));\n    },\n    handleDelete(row) {\n      this.$confirm(\"此操作将永久删除该条数据, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(() => {\n        delUser({\n          id: row.id\n        }).then(() => {\n          this.$message({\n            type: \"success\",\n            message: \"删除成功!\"\n          });\n          //从新获取列表接口\n          this.getList();\n        });\n      }).catch(() => {\n        this.$message({\n          type: \"info\",\n          message: \"已取消删除\"\n        });\n      });\n    },\n    handleAdd() {\n      this.modalType = 0;\n      this.dialogVisible = true;\n    },\n    //获取列表的数组\n    getList() {\n      //获取列表的数据\n      getUser({\n        params: {\n          ...this.userForm,\n          ...this.pageData\n        }\n      }).then(_ref => {\n        let {\n          data\n        } = _ref;\n        this.tableData = data.list;\n        this.total = data.count || 0;\n      });\n    },\n    //选择页码的回调函数\n    handlePage(val) {\n      this.pageData.page = val;\n      this.getList();\n    },\n    //列表的查询\n    onSubmit() {\n      this.getList();\n    }\n  },\n  mounted() {\n    this.getList();\n  }\n};","map":{"version":3,"names":["getUser","addUser","editUser","delUser","data","checkAge","rule","value","callback","Error","setTimeout","Number","isInteger","dialogVisible","form","name","age","sex","birth","addr","rules","required","message","validator","trigger","tableData","modalType","total","pageData","page","limit","userForm","methods","submit","$refs","validate","valid","then","getList","resetFields","handleClose","cancel","handleEdit","row","JSON","parse","stringify","handleDelete","$confirm","confirmButtonText","cancelButtonText","type","id","$message","catch","handleAdd","params","_ref","list","count","handlePage","val","onSubmit","mounted"],"sources":["src/views/User.vue"],"sourcesContent":["<template>\r\n  <div class=\"manage\">\r\n    <el-dialog\r\n      title=\"提示\"\r\n      :visible.sync=\"dialogVisible\"\r\n      width=\"50%\"\r\n      :before-close=\"handleClose\"\r\n    >\r\n      <!--  用户的表单信息 -->\r\n      <el-form\r\n        ref=\"form\"\r\n        :rules=\"rules\"\r\n        :model=\"form\"\r\n        label-width=\"80px\"\r\n        :inline=\"true\"\r\n      >\r\n        <el-form-item label=\"姓名\" prop=\"name\">\r\n          <el-input placeholder=\"请输入姓名\" v-model=\"form.name\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"年龄\" prop=\"age\">\r\n          <el-input\r\n            placeholder=\"请输入年龄\"\r\n            v-model.number=\"form.age\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"性别\" prop=\"sex\">\r\n          <el-select v-model=\"form.sex\" placeholder=\"请选择性别\">\r\n            <el-option label=\"男\" :value=\"1\"></el-option>\r\n            <el-option label=\"女\" :value=\"0\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"出生日期\" prop=\"birth\">\r\n          <el-date-picker\r\n            v-model=\"form.birth\"\r\n            type=\"date\"\r\n            placeholder=\"选择日期\"\r\n            value-format=\"yyyy-MM-DD\"\r\n          >\r\n          </el-date-picker>\r\n        </el-form-item>\r\n        <el-form-item label=\"地址\" prop=\"addr\">\r\n          <el-input placeholder=\"请输入地址\" v-model=\"form.addr\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"handleClose\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"submit\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n    <div class=\"manage-header\">\r\n      <el-button @click=\"handleAdd\" type=\"primary\"> + 新增 </el-button>\r\n      <!-- 搜索区域 -->\r\n      <el-form :model=\"userForm\" :inline=\"true\">\r\n        <el-form-item>\r\n          <el-input placeholder=\"请输入名称\" v-model=\"userForm.name\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"onSubmit\">查询</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n    <div class=\"common-table\">\r\n      <el-table stripe height=\"90%\" :data=\"tableData\" style=\"width: 100%\">\r\n        <el-table-column prop=\"name\" label=\"姓名\"> </el-table-column>\r\n        <el-table-column prop=\"sex\" label=\"性别\">\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ scope.row.sex == 1 ? \"男\" : \"女\" }}</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"age\" label=\"年龄\"> </el-table-column>\r\n        <el-table-column prop=\"birth\" label=\"出生日期\"> </el-table-column>\r\n        <el-table-column prop=\"addr\" label=\"地址\"> </el-table-column>\r\n        <el-table-column prop=\"addr\" label=\"操作\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button size=\"mini\" @click=\"handleEdit(scope.row)\"\r\n              >编辑</el-button\r\n            >\r\n            <el-button\r\n              type=\"danger\"\r\n              size=\"mini\"\r\n              @click=\"handleDelete(scope.row)\"\r\n              >删除</el-button\r\n            >\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <div class=\"pager\">\r\n        <el-pagination\r\n          layout=\"prev, pager, next\"\r\n          :total=\"total\"\r\n          @current-change=\"handlePage\"\r\n        >\r\n        </el-pagination>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getUser, addUser, editUser, delUser } from \"../api\";\r\nexport default {\r\n  data() {\r\n    //判断年龄是否合法\r\n    var checkAge = (rule, value, callback) => {\r\n      if (!value) {\r\n        return callback(new Error(\"年龄不能为空\"));\r\n      }\r\n      setTimeout(() => {\r\n        if (!Number.isInteger(value)) {\r\n          callback(new Error(\"请输入数字值\"));\r\n        } else {\r\n          if (value < 18) {\r\n            callback(new Error(\"必须年满18岁\"));\r\n          } else {\r\n            callback();\r\n          }\r\n        }\r\n      }, 500);\r\n    };\r\n    return {\r\n      dialogVisible: false,\r\n      form: {\r\n        name: \"\",\r\n        age: \"\",\r\n        sex: \"\",\r\n        birth: \"\",\r\n        addr: \"\",\r\n      },\r\n      rules: {\r\n        name: [{ required: true, message: \"请输入姓名\" }],\r\n        age: [{ required: true, validator: checkAge, trigger: \"blur\" }],\r\n        sex: [{ required: true, message: \"请选择性别\" }],\r\n        birth: [{ required: true, message: \"请选择出生日期\" }],\r\n        addr: [{ required: true, message: \"请输入地址\" }],\r\n      },\r\n      tableData: [],\r\n      modalType: 0, //0表示新增弹窗，1表示编辑\r\n      total: 0, //当前的总条数\r\n      pageData: {\r\n        page: 1,\r\n        limit: 10,\r\n      },\r\n      userForm: {\r\n        name: \"\",\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    //判断用户提交表单\r\n    submit() {\r\n      this.$refs.form.validate((valid) => {\r\n        if (valid) {\r\n          //后续对表单的处理\r\n          if (this.modalType === 0) {\r\n            addUser(this.form).then(() => {\r\n              //从新获取列表接口\r\n              this.getList();\r\n            });\r\n          } else {\r\n            editUser(this.form).then(() => {\r\n              //从新获取列表接口\r\n              this.getList();\r\n            });\r\n          }\r\n          //清空表单数据\r\n          this.$refs.form.resetFields();\r\n          //关闭弹窗\r\n          this.dialogVisible = false;\r\n        }\r\n      });\r\n    },\r\n    //弹窗关闭\r\n    handleClose() {\r\n      this.$refs.form.resetFields();\r\n      this.dialogVisible = false;\r\n    },\r\n    cancel() {\r\n      this.handleClose();\r\n    },\r\n    handleEdit(row) {\r\n      this.modalType = 1;\r\n      this.dialogVisible = true;\r\n      //注意需要对当前函数进行深拷贝\r\n      this.form = JSON.parse(JSON.stringify(row));\r\n    },\r\n    handleDelete(row) {\r\n      this.$confirm(\"此操作将永久删除该条数据, 是否继续?\", \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\",\r\n      })\r\n        .then(() => {\r\n          delUser({ id: row.id }).then(() => {\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"删除成功!\",\r\n            });\r\n            //从新获取列表接口\r\n            this.getList();\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.$message({\r\n            type: \"info\",\r\n            message: \"已取消删除\",\r\n          });\r\n        });\r\n    },\r\n    handleAdd() {\r\n      this.modalType = 0;\r\n      this.dialogVisible = true;\r\n    },\r\n    //获取列表的数组\r\n    getList() {\r\n      //获取列表的数据\r\n      getUser({ params: { ...this.userForm, ...this.pageData } }).then(\r\n        ({ data }) => {\r\n          this.tableData = data.list;\r\n          this.total = data.count || 0;\r\n        }\r\n      );\r\n    },\r\n    //选择页码的回调函数\r\n    handlePage(val) {\r\n      this.pageData.page = val;\r\n      this.getList();\r\n    },\r\n    //列表的查询\r\n    onSubmit() {\r\n      this.getList();\r\n    },\r\n  },\r\n  mounted() {\r\n    this.getList();\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.manage {\r\n  height: 90%;\r\n  .manage-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n  .common-table {\r\n    position: relative;\r\n    height: calc(100% - 62px);\r\n    .pager {\r\n      position: absolute;\r\n      bottom: 0;\r\n      right: 20px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}