{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Cookie from \"js-cookie\";\nexport default {\n  state: {\n    //控制菜单展开或收起\n    isCollapse: false,\n    //面包屑数据\n    tabsList: [{\n      path: \"/\",\n      name: \"home\",\n      label: \"首页\",\n      icon: \"s-home\",\n      url: \"Home/Home\"\n    }],\n    menu: []\n  },\n  mutations: {\n    //修改菜单展开收起的方法\n    collapseMenu(state) {\n      state.isCollapse = !state.isCollapse;\n    },\n    //更新面包屑数据\n    selectMenu(state, val) {\n      //判断添加数据是否为首页\n      if (val.name !== \"home\") {\n        const index = state.tabsList.findIndex(item => item.name === val.name);\n        //如果不存在\n        if (index === -1) {\n          state.tabsList.push(val);\n        }\n      }\n    },\n    //删除制定tag数据\n    closeTag(state, item) {\n      const index = state.tabsList.findIndex(val => val.name === item.name);\n      state.tabsList.splice(index, 1);\n    },\n    //设置menu的数据\n    setMenu(state, val) {\n      state.menu = val;\n      Cookie.set(\"menu\", JSON.stringify(val));\n    },\n    //动态注册路由\n    addMenu(state, router) {\n      //判断缓存中是否有数据\n      if (!Cookie.get(\"menu\")) return;\n      const menu = JSON.parse(Cookie.get(\"menu\"));\n      // 更新数据\n      state.menu = menu;\n      //组装动态路由的数据\n      const menuArray = [];\n      menu.forEach(item => {\n        if (item.children) {\n          item.children = item.children.map(item => {\n            item.component = () => import(`../views/${item.url}`);\n            return item;\n          });\n          menuArray.push(...item.children);\n        } else {\n          item.component = () => import(`../views/${item.url}`);\n          menuArray.push(item);\n        }\n      });\n      /* console.log(menuArray, \"menuArray\"); */\n      //路由的动态添加\n      menuArray.forEach(item => {\n        router.addRoute(\"Main\", item);\n      });\n    }\n  }\n};","map":{"version":3,"names":["Cookie","state","isCollapse","tabsList","path","name","label","icon","url","menu","mutations","collapseMenu","selectMenu","val","index","findIndex","item","push","closeTag","splice","setMenu","set","JSON","stringify","addMenu","router","get","parse","menuArray","forEach","children","map","component","addRoute"],"sources":["C:/Users/Lriucnxi/Desktop/my-app/src/store/tab.js"],"sourcesContent":["import Cookie from \"js-cookie\";\r\nexport default {\r\n  state: {\r\n    //控制菜单展开或收起\r\n    isCollapse: false,\r\n    //面包屑数据\r\n    tabsList: [\r\n      {\r\n        path: \"/\",\r\n        name: \"home\",\r\n        label: \"首页\",\r\n        icon: \"s-home\",\r\n        url: \"Home/Home\",\r\n      },\r\n    ],\r\n    menu: [],\r\n  },\r\n  mutations: {\r\n    //修改菜单展开收起的方法\r\n    collapseMenu(state) {\r\n      state.isCollapse = !state.isCollapse;\r\n    },\r\n    //更新面包屑数据\r\n    selectMenu(state, val) {\r\n      //判断添加数据是否为首页\r\n      if (val.name !== \"home\") {\r\n        const index = state.tabsList.findIndex(\r\n          (item) => item.name === val.name\r\n        );\r\n        //如果不存在\r\n        if (index === -1) {\r\n          state.tabsList.push(val);\r\n        }\r\n      }\r\n    },\r\n    //删除制定tag数据\r\n    closeTag(state, item) {\r\n      const index = state.tabsList.findIndex((val) => val.name === item.name);\r\n      state.tabsList.splice(index, 1);\r\n    },\r\n    //设置menu的数据\r\n    setMenu(state, val) {\r\n      state.menu = val;\r\n      Cookie.set(\"menu\", JSON.stringify(val));\r\n    },\r\n    //动态注册路由\r\n    addMenu(state, router) {\r\n      //判断缓存中是否有数据\r\n      if (!Cookie.get(\"menu\")) return;\r\n      const menu = JSON.parse(Cookie.get(\"menu\"));\r\n      // 更新数据\r\n      state.menu = menu;\r\n      //组装动态路由的数据\r\n      const menuArray = [];\r\n      menu.forEach((item) => {\r\n        if (item.children) {\r\n          item.children = item.children.map((item) => {\r\n            item.component = () => import(`../views/${item.url}`);\r\n            return item;\r\n          });\r\n          menuArray.push(...item.children);\r\n        } else {\r\n          item.component = () => import(`../views/${item.url}`);\r\n          menuArray.push(item);\r\n        }\r\n      });\r\n      /* console.log(menuArray, \"menuArray\"); */\r\n      //路由的动态添加\r\n      menuArray.forEach((item) => {\r\n        router.addRoute(\"Main\", item);\r\n      });\r\n    },\r\n  },\r\n};\r\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,WAAW;AAC9B,eAAe;EACbC,KAAK,EAAE;IACL;IACAC,UAAU,EAAE,KAAK;IACjB;IACAC,QAAQ,EAAE,CACR;MACEC,IAAI,EAAE,GAAG;MACTC,IAAI,EAAE,MAAM;MACZC,KAAK,EAAE,IAAI;MACXC,IAAI,EAAE,QAAQ;MACdC,GAAG,EAAE;IACP,CAAC,CACF;IACDC,IAAI,EAAE;EACR,CAAC;EACDC,SAAS,EAAE;IACT;IACAC,YAAYA,CAACV,KAAK,EAAE;MAClBA,KAAK,CAACC,UAAU,GAAG,CAACD,KAAK,CAACC,UAAU;IACtC,CAAC;IACD;IACAU,UAAUA,CAACX,KAAK,EAAEY,GAAG,EAAE;MACrB;MACA,IAAIA,GAAG,CAACR,IAAI,KAAK,MAAM,EAAE;QACvB,MAAMS,KAAK,GAAGb,KAAK,CAACE,QAAQ,CAACY,SAAS,CACnCC,IAAI,IAAKA,IAAI,CAACX,IAAI,KAAKQ,GAAG,CAACR,IAC9B,CAAC;QACD;QACA,IAAIS,KAAK,KAAK,CAAC,CAAC,EAAE;UAChBb,KAAK,CAACE,QAAQ,CAACc,IAAI,CAACJ,GAAG,CAAC;QAC1B;MACF;IACF,CAAC;IACD;IACAK,QAAQA,CAACjB,KAAK,EAAEe,IAAI,EAAE;MACpB,MAAMF,KAAK,GAAGb,KAAK,CAACE,QAAQ,CAACY,SAAS,CAAEF,GAAG,IAAKA,GAAG,CAACR,IAAI,KAAKW,IAAI,CAACX,IAAI,CAAC;MACvEJ,KAAK,CAACE,QAAQ,CAACgB,MAAM,CAACL,KAAK,EAAE,CAAC,CAAC;IACjC,CAAC;IACD;IACAM,OAAOA,CAACnB,KAAK,EAAEY,GAAG,EAAE;MAClBZ,KAAK,CAACQ,IAAI,GAAGI,GAAG;MAChBb,MAAM,CAACqB,GAAG,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACV,GAAG,CAAC,CAAC;IACzC,CAAC;IACD;IACAW,OAAOA,CAACvB,KAAK,EAAEwB,MAAM,EAAE;MACrB;MACA,IAAI,CAACzB,MAAM,CAAC0B,GAAG,CAAC,MAAM,CAAC,EAAE;MACzB,MAAMjB,IAAI,GAAGa,IAAI,CAACK,KAAK,CAAC3B,MAAM,CAAC0B,GAAG,CAAC,MAAM,CAAC,CAAC;MAC3C;MACAzB,KAAK,CAACQ,IAAI,GAAGA,IAAI;MACjB;MACA,MAAMmB,SAAS,GAAG,EAAE;MACpBnB,IAAI,CAACoB,OAAO,CAAEb,IAAI,IAAK;QACrB,IAAIA,IAAI,CAACc,QAAQ,EAAE;UACjBd,IAAI,CAACc,QAAQ,GAAGd,IAAI,CAACc,QAAQ,CAACC,GAAG,CAAEf,IAAI,IAAK;YAC1CA,IAAI,CAACgB,SAAS,GAAG,MAAM,MAAM,CAAE,YAAWhB,IAAI,CAACR,GAAI,EAAC,CAAC;YACrD,OAAOQ,IAAI;UACb,CAAC,CAAC;UACFY,SAAS,CAACX,IAAI,CAAC,GAAGD,IAAI,CAACc,QAAQ,CAAC;QAClC,CAAC,MAAM;UACLd,IAAI,CAACgB,SAAS,GAAG,MAAM,MAAM,CAAE,YAAWhB,IAAI,CAACR,GAAI,EAAC,CAAC;UACrDoB,SAAS,CAACX,IAAI,CAACD,IAAI,CAAC;QACtB;MACF,CAAC,CAAC;MACF;MACA;MACAY,SAAS,CAACC,OAAO,CAAEb,IAAI,IAAK;QAC1BS,MAAM,CAACQ,QAAQ,CAAC,MAAM,EAAEjB,IAAI,CAAC;MAC/B,CAAC,CAAC;IACJ;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}