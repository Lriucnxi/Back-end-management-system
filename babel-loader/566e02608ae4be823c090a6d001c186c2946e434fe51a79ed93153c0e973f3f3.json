{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Mock from \"mockjs\";\nimport Cookie from \"js-cookie\";\nimport { getMenu } from \"../api\";\nexport default {\n  data() {\n    return {\n      form: {\n        username: \"\",\n        password: \"\"\n      },\n      rules: {\n        username: [{\n          required: true,\n          trigger: \"blur\",\n          message: \"请输入用户名字\"\n        }],\n        password: [{\n          required: true,\n          trigger: \"blur\",\n          message: \"请输入密码\"\n        }]\n      }\n    };\n  },\n  methods: {\n    //登录校验\n    submit() {\n      /* //token信息\r\n      const token = Mock.Random.guid();\r\n      //token信息存入cookie用于不同页面间的通信\r\n      Cookie.set(\"token\", token);\r\n      //跳转至首页 */\n\n      //校验form通过\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          getMenu(this.form).then(_ref => {\n            let {\n              data\n            } = _ref;\n            /* console.log(data); */\n            if (data.code === 20000) {\n              //token信息存入cookie用于不同页面间的通信\n              Cookie.set(\"token\", data.data.token);\n              //获取菜单的数据，存入store中\n              this.$store.commit(\"setMenu\", data.data.menu);\n              this.$store.commit(\"addMenu\", this.$router);\n              //跳转页面\n              this.$router.push(\"/home\");\n            } else {\n              this.$message.error(data.data.message);\n            }\n          });\n        }\n      });\n    },\n    //实现按下enter触发登录点击事件\n    triggerClick() {\n      this.$refs.btn.$emit(\"click\");\n      /* this.$refs.select.blur();  */ //解决选择框回车后展示下拉列表问题\n    },\n\n    //实现按下enter跳转下一input框\n    handelTab(i, e) {\n      let that = this;\n      if (that.$refs[\"input\" + i]) {\n        that.$nextTick(() => {\n          e.target.blur();\n          let index = i + 1;\n          that.$refs[\"input\" + index].focus();\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["Mock","Cookie","getMenu","data","form","username","password","rules","required","trigger","message","methods","submit","$refs","validate","valid","then","_ref","code","set","token","$store","commit","menu","$router","push","$message","error","triggerClick","btn","$emit","handelTab","i","e","that","$nextTick","target","blur","index","focus"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\r\n  <el-form\r\n    ref=\"form\"\r\n    label-width=\"70px\"\r\n    :inline=\"true\"\r\n    :model=\"form\"\r\n    :rules=\"rules\"\r\n    class=\"login-container\"\r\n  >\r\n    <h3 class=\"login_title\">系统登录</h3>\r\n    <el-form-item label=\"用户名\" prop=\"username\">\r\n      <el-input\r\n        @keyup.enter.native=\"handelTab(1, $event)\"\r\n        ref=\"input1\"\r\n        v-model=\"form.username\"\r\n        placeholder=\"请输入账号\"\r\n      ></el-input>\r\n    </el-form-item>\r\n    <el-form-item label=\"密码\" prop=\"password\">\r\n      <el-input\r\n        ref=\"input2\"\r\n        v-model=\"form.password\"\r\n        placeholder=\"请输入密码\"\r\n        type=\"password\"\r\n        @keyup.enter.native=\"triggerClick\"\r\n      ></el-input>\r\n    </el-form-item>\r\n    <el-form-item>\r\n      <el-button\r\n        ref=\"btn\"\r\n        @click=\"submit\"\r\n        type=\"primary\"\r\n        style=\"margin-left: calc(50% + 50px)\"\r\n        >登录</el-button\r\n      >\r\n    </el-form-item>\r\n  </el-form>\r\n</template>\r\n\r\n<script>\r\nimport Mock from \"mockjs\";\r\nimport Cookie from \"js-cookie\";\r\nimport { getMenu } from \"../api\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      form: {\r\n        username: \"\",\r\n        password: \"\",\r\n      },\r\n      rules: {\r\n        username: [\r\n          {\r\n            required: true,\r\n            trigger: \"blur\",\r\n            message: \"请输入用户名字\",\r\n          },\r\n        ],\r\n        password: [\r\n          {\r\n            required: true,\r\n            trigger: \"blur\",\r\n            message: \"请输入密码\",\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    //登录校验\r\n    submit() {\r\n      /* //token信息\r\n      const token = Mock.Random.guid();\r\n      //token信息存入cookie用于不同页面间的通信\r\n      Cookie.set(\"token\", token);\r\n      //跳转至首页 */\r\n\r\n      //校验form通过\r\n      this.$refs.form.validate((valid) => {\r\n        if (valid) {\r\n          getMenu(this.form).then(({ data }) => {\r\n            /* console.log(data); */\r\n            if (data.code === 20000) {\r\n              //token信息存入cookie用于不同页面间的通信\r\n              Cookie.set(\"token\", data.data.token);\r\n              //获取菜单的数据，存入store中\r\n              this.$store.commit(\"setMenu\", data.data.menu);\r\n              this.$store.commit(\"addMenu\", this.$router);\r\n              //跳转页面\r\n              this.$router.push(\"/home\");\r\n            } else {\r\n              this.$message.error(data.data.message);\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    //实现按下enter触发登录点击事件\r\n    triggerClick() {\r\n      this.$refs.btn.$emit(\"click\");\r\n      /* this.$refs.select.blur();  */ //解决选择框回车后展示下拉列表问题\r\n    },\r\n    //实现按下enter跳转下一input框\r\n    handelTab(i, e) {\r\n      let that = this;\r\n      if (that.$refs[\"input\" + i]) {\r\n        that.$nextTick(() => {\r\n          e.target.blur();\r\n          let index = i + 1;\r\n          that.$refs[\"input\" + index].focus();\r\n        });\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.login-container {\r\n  width: 350px;\r\n  margin: 180px auto;\r\n  padding: 35px 35px 15px 35px;\r\n  border: 1px solid #eaeaea;\r\n  background-color: #fff;\r\n  border-radius: 15px;\r\n  box-shadow: 0 0 25px #cac6c6;\r\n  box-sizing: border-box;\r\n  .login_title {\r\n    text-align: center;\r\n    margin-bottom: 40px;\r\n    color: #505458;\r\n  }\r\n  .el-input {\r\n    width: 198px;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";AAwCA,OAAAA,IAAA;AACA,OAAAC,MAAA;AACA,SAAAC,OAAA;AAEA;EACAC,KAAA;IACA;MACAC,IAAA;QACAC,QAAA;QACAC,QAAA;MACA;MACAC,KAAA;QACAF,QAAA,GACA;UACAG,QAAA;UACAC,OAAA;UACAC,OAAA;QACA,EACA;QACAJ,QAAA,GACA;UACAE,QAAA;UACAC,OAAA;UACAC,OAAA;QACA;MAEA;IACA;EACA;EACAC,OAAA;IACA;IACAC,OAAA;MACA;AACA;AACA;AACA;AACA;;MAEA;MACA,KAAAC,KAAA,CAAAT,IAAA,CAAAU,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACAb,OAAA,MAAAE,IAAA,EAAAY,IAAA,CAAAC,IAAA;YAAA;cAAAd;YAAA,IAAAc,IAAA;YACA;YACA,IAAAd,IAAA,CAAAe,IAAA;cACA;cACAjB,MAAA,CAAAkB,GAAA,UAAAhB,IAAA,CAAAA,IAAA,CAAAiB,KAAA;cACA;cACA,KAAAC,MAAA,CAAAC,MAAA,YAAAnB,IAAA,CAAAA,IAAA,CAAAoB,IAAA;cACA,KAAAF,MAAA,CAAAC,MAAA,iBAAAE,OAAA;cACA;cACA,KAAAA,OAAA,CAAAC,IAAA;YACA;cACA,KAAAC,QAAA,CAAAC,KAAA,CAAAxB,IAAA,CAAAA,IAAA,CAAAO,OAAA;YACA;UACA;QACA;MACA;IACA;IACA;IACAkB,aAAA;MACA,KAAAf,KAAA,CAAAgB,GAAA,CAAAC,KAAA;MACA;IACA;;IACA;IACAC,UAAAC,CAAA,EAAAC,CAAA;MACA,IAAAC,IAAA;MACA,IAAAA,IAAA,CAAArB,KAAA,WAAAmB,CAAA;QACAE,IAAA,CAAAC,SAAA;UACAF,CAAA,CAAAG,MAAA,CAAAC,IAAA;UACA,IAAAC,KAAA,GAAAN,CAAA;UACAE,IAAA,CAAArB,KAAA,WAAAyB,KAAA,EAAAC,KAAA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}