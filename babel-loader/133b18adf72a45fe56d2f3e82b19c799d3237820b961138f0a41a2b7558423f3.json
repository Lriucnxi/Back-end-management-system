{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getData } from \"../api\";\nimport * as echarts from \"echarts\";\nexport default {\n  data() {\n    return {\n      nowTime: \"\",\n      //数据\n      tableData: [\n        /*\r\n        {\r\n          name: 'OPPO',\r\n          todayBuy: 52,\r\n          monthBuy: 527,\r\n          totalBuy: 8003\r\n        }, {\r\n          name: 'ViVo',\r\n          todayBuy: 114,\r\n          monthBuy: 342,\r\n          totalBuy: 8452\r\n        }, {\r\n          name: '小米',\r\n          todayBuy: 528,\r\n          monthBuy: 425,\r\n          totalBuy: 9881\r\n        }, {\r\n          name: '华为',\r\n          todayBuy: 142,\r\n          monthBuy: 257,\r\n          totalBuy: 3045\r\n        }, {\r\n          name: '三星',\r\n          todayBuy: 50,\r\n          monthBuy: 526,\r\n          totalBuy: 1057\r\n        }, {\r\n          name: '魅族',\r\n          todayBuy: 26,\r\n          monthBuy: 452,\r\n          totalBuy: 3044\r\n        }, {\r\n          name: 'Sony',\r\n          todayBuy: 15,\r\n          monthBuy: 125,\r\n          totalBuy: 725\r\n        }, {\r\n          name: '苹果',\r\n          todayBuy: 235,\r\n          monthBuy: 1425,\r\n          totalBuy: 9942\r\n        }*/\n      ],\n      //key，val\n      tableLabel: {\n        name: \"品牌\",\n        todayBuy: \"今日销售额\",\n        monthBuy: \"本月销售额\",\n        totalBuy: \"总销售额\"\n      },\n      //订单数据\n      countData: [{\n        name: \"今日支付订单\",\n        value: 1569,\n        icon: \"success\",\n        color: \"#2ec7c9\"\n      }, {\n        name: \"今日收藏订单\",\n        value: 236,\n        icon: \"star-on\",\n        color: \"#ffb980\"\n      }, {\n        name: \"今日未支付订单\",\n        value: 15,\n        icon: \"s-goods\",\n        color: \"#5ab1ef\"\n      }, {\n        name: \"本月支付订单\",\n        value: 18998,\n        icon: \"success\",\n        color: \"#2ec7c9\"\n      }, {\n        name: \"本月收藏订单\",\n        value: 1668,\n        icon: \"star-on\",\n        color: \"#ffb980\"\n      }, {\n        name: \"本月未支付订单\",\n        value: 357,\n        icon: \"s-goods\",\n        color: \"#5ab1ef\"\n      }]\n    };\n  },\n  mounted() {\n    getData().then(_ref => {\n      let {\n        data\n      } = _ref;\n      const {\n        tableData\n      } = data.data;\n      this.tableData = tableData;\n      //基于准备好的dom，初始化echarts实例\n      const echarts1 = echarts.init(this.$refs.echarts1);\n      //指定图表的配置项和数据\n      var echarts1option = {};\n      //处理数据xAxis\n      const {\n        orderData,\n        userData,\n        videoData\n      } = data.data;\n      const xAxis = Object.keys(orderData.data[0]);\n      const xAxisData = {\n        data: xAxis\n      };\n      echarts1option.tooltip = {\n        trigger: \"axis\",\n        appendToBody: true /* 设置以window为根节点向外浮动 */\n      };\n\n      echarts1option.xAxis = {\n        data: orderData.data1\n      };\n      echarts1option.yAxis = {};\n      echarts1option.legend = xAxisData;\n      echarts1option.series = [];\n      xAxis.forEach(key => {\n        echarts1option.series.push({\n          name: key,\n          data: orderData.data.map(item => item[key]),\n          type: \"line\"\n        });\n      });\n      //使用指定的配置项和数据显示图表\n      echarts1.setOption(echarts1option);\n\n      //柱状图\n      const echarts2 = echarts.init(this.$refs.echarts2);\n      const echarts2option = {\n        legend: {\n          //图例文字颜色\n          textStyle: {\n            color: \"#333\"\n          }\n        },\n        grid: {\n          left: \"20%\"\n        },\n        //提示框\n        tooltip: {\n          trigger: \"axis\"\n        },\n        xAxis: {\n          type: \"category\",\n          //类目轴\n          data: userData.map(item => item.data),\n          axisLine: {\n            lineStyle: {\n              color: \"#17b3a3\"\n            }\n          },\n          axisLabel: {\n            interval: 0,\n            color: \"#333\"\n          }\n        },\n        yAxis: [{\n          type: \"value\",\n          axisLine: {\n            lineStyle: {\n              color: \"#17b3a3\"\n            }\n          }\n        }],\n        color: [\"#2ec7c9\", \"#b6a2de\"],\n        series: [{\n          name: \"新增用户\",\n          data: userData.map(item => item.new),\n          type: \"bar\"\n        }, {\n          name: \"活跃用户\",\n          data: userData.map(item => item.active),\n          type: \"bar\"\n        }]\n      };\n      //使用指定的配置项和数据显示图表\n      echarts2.setOption(echarts2option);\n\n      //饼状图\n      const echarts3 = echarts.init(this.$refs.echarts3);\n      const echarts3option = {\n        tooltip: {\n          trigger: \"item\"\n        },\n        color: [\"#0f78f4\", \"#dd536b\", \"#9462e5\", \"#a6a6a6\", \"#e1bb22\", \"#39c362\", \"#3ed1cf\", \"#bce672\"],\n        series: [{\n          data: videoData,\n          type: \"pie\"\n        }]\n      };\n      //使用指定的配置项和数据显示图表\n      echarts3.setOption(echarts3option);\n      //设置图表随着窗口的变动而变动\n      window.onresize = function () {\n        echarts1.resize();\n        echarts2.resize();\n        echarts3.resize();\n      };\n    });\n  },\n  methods: {\n    //获取当前年月日\n    getTime() {\n      let dt = new Date();\n      var y = dt.getFullYear();\n      var mt = (dt.getMonth() + 1).toString().padStart(2, \"0\");\n      var day = dt.getDate().toString().padStart(2, \"0\");\n      this.nowTime = y + \"-\" + mt + \"-\" + day;\n    }\n  },\n  created() {\n    this.getTime();\n  }\n};","map":{"version":3,"names":["getData","echarts","data","nowTime","tableData","tableLabel","name","todayBuy","monthBuy","totalBuy","countData","value","icon","color","mounted","then","_ref","echarts1","init","$refs","echarts1option","orderData","userData","videoData","xAxis","Object","keys","xAxisData","tooltip","trigger","appendToBody","data1","yAxis","legend","series","forEach","key","push","map","item","type","setOption","echarts2","echarts2option","textStyle","grid","left","axisLine","lineStyle","axisLabel","interval","new","active","echarts3","echarts3option","window","onresize","resize","methods","getTime","dt","Date","y","getFullYear","mt","getMonth","toString","padStart","day","getDate","created"],"sources":["src/views/Home.vue"],"sourcesContent":["<template>\r\n  <el-row>\r\n    <el-col :span=\"8\" style=\"padding-right: 10px\">\r\n      <el-card class=\"box-card\">\r\n        <div class=\"user\">\r\n          <img src=\"../assets/images/user.jpg\" alt=\"用户头像\" />\r\n          <div class=\"userinfo\">\r\n            <p class=\"name\">Admin</p>\r\n            <p class=\"access\">超级管理员</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"login-info\">\r\n          <p>\r\n            上次登录时间：<span>{{ nowTime }}</span>\r\n          </p>\r\n          <p>上次登录地点：<span>中国</span></p>\r\n        </div>\r\n      </el-card>\r\n\r\n      <el-card style=\"margin-top: 20px; height: 457px\">\r\n        <el-table :data=\"tableData\" style=\"width: 100%\">\r\n          <el-table-column\r\n            v-for=\"(val, key) in tableLabel\"\r\n            :prop=\"key\"\r\n            :label=\"val\"\r\n          >\r\n          </el-table-column>\r\n          <!-- <el-table-column prop=\"todayBuy\" label=\"今日销售额\">\r\n          </el-table-column>\r\n          <el-table-column prop=\"monthBuy\" label=\"本月销售额\">\r\n          </el-table-column>\r\n          <el-table-column prop=\"totalBuy\" label=\"总销售额\">\r\n          </el-table-column> -->\r\n        </el-table>\r\n      </el-card>\r\n      <div class=\"grid-content bg-purple\"></div>\r\n    </el-col>\r\n\r\n    <el-col :span=\"16\" style=\"padding-left: 10px\">\r\n      <div class=\"num\">\r\n        <el-card\r\n          v-for=\"item in countData\"\r\n          :key=\"item.name\"\r\n          :body-style=\"{ display: 'flex', padding: 0 }\"\r\n        >\r\n          <i\r\n            class=\"icon\"\r\n            :class=\"`el-icon-${item.icon}`\"\r\n            :style=\"{ background: item.color }\"\r\n          >\r\n          </i>\r\n          <div class=\"detail\">\r\n            <p class=\"price\">￥{{ item.value }}</p>\r\n            <p class=\"desc\">{{ item.name }}</p>\r\n          </div>\r\n        </el-card>\r\n      </div>\r\n      <el-card style=\"height: 280px\">\r\n        <!-- 折线图 -->\r\n        <div ref=\"echarts1\" style=\"height: 280px\"></div>\r\n      </el-card>\r\n      <div class=\"graph\">\r\n        <el-card style=\"height: 260px\">\r\n          <div ref=\"echarts2\" style=\"height: 260px\"></div>\r\n        </el-card>\r\n        <el-card style=\"height: 260px\">\r\n          <div ref=\"echarts3\" style=\"height: 240px\"></div>\r\n        </el-card>\r\n      </div>\r\n      <div class=\"grid-content bg-purple-light\"></div>\r\n    </el-col>\r\n  </el-row>\r\n</template>\r\n\r\n<script>\r\nimport { getData } from \"../api\";\r\nimport * as echarts from \"echarts\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      nowTime: \"\",\r\n      //数据\r\n      tableData: [\r\n        /*\r\n        {\r\n          name: 'OPPO',\r\n          todayBuy: 52,\r\n          monthBuy: 527,\r\n          totalBuy: 8003\r\n        }, {\r\n          name: 'ViVo',\r\n          todayBuy: 114,\r\n          monthBuy: 342,\r\n          totalBuy: 8452\r\n        }, {\r\n          name: '小米',\r\n          todayBuy: 528,\r\n          monthBuy: 425,\r\n          totalBuy: 9881\r\n        }, {\r\n          name: '华为',\r\n          todayBuy: 142,\r\n          monthBuy: 257,\r\n          totalBuy: 3045\r\n        }, {\r\n          name: '三星',\r\n          todayBuy: 50,\r\n          monthBuy: 526,\r\n          totalBuy: 1057\r\n        }, {\r\n          name: '魅族',\r\n          todayBuy: 26,\r\n          monthBuy: 452,\r\n          totalBuy: 3044\r\n        }, {\r\n          name: 'Sony',\r\n          todayBuy: 15,\r\n          monthBuy: 125,\r\n          totalBuy: 725\r\n        }, {\r\n          name: '苹果',\r\n          todayBuy: 235,\r\n          monthBuy: 1425,\r\n          totalBuy: 9942\r\n        }*/\r\n      ],\r\n      //key，val\r\n      tableLabel: {\r\n        name: \"品牌\",\r\n        todayBuy: \"今日销售额\",\r\n        monthBuy: \"本月销售额\",\r\n        totalBuy: \"总销售额\",\r\n      },\r\n      //订单数据\r\n      countData: [\r\n        {\r\n          name: \"今日支付订单\",\r\n          value: 1569,\r\n          icon: \"success\",\r\n          color: \"#2ec7c9\",\r\n        },\r\n        {\r\n          name: \"今日收藏订单\",\r\n          value: 236,\r\n          icon: \"star-on\",\r\n          color: \"#ffb980\",\r\n        },\r\n        {\r\n          name: \"今日未支付订单\",\r\n          value: 15,\r\n          icon: \"s-goods\",\r\n          color: \"#5ab1ef\",\r\n        },\r\n        {\r\n          name: \"本月支付订单\",\r\n          value: 18998,\r\n          icon: \"success\",\r\n          color: \"#2ec7c9\",\r\n        },\r\n        {\r\n          name: \"本月收藏订单\",\r\n          value: 1668,\r\n          icon: \"star-on\",\r\n          color: \"#ffb980\",\r\n        },\r\n        {\r\n          name: \"本月未支付订单\",\r\n          value: 357,\r\n          icon: \"s-goods\",\r\n          color: \"#5ab1ef\",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  mounted() {\r\n    getData().then(({ data }) => {\r\n      const { tableData } = data.data;\r\n      this.tableData = tableData;\r\n      //基于准备好的dom，初始化echarts实例\r\n      const echarts1 = echarts.init(this.$refs.echarts1);\r\n      //指定图表的配置项和数据\r\n      var echarts1option = {};\r\n      //处理数据xAxis\r\n      const { orderData, userData, videoData } = data.data;\r\n      const xAxis = Object.keys(orderData.data[0]);\r\n      const xAxisData = {\r\n        data: xAxis,\r\n      };\r\n\r\n      echarts1option.tooltip = {\r\n        trigger: \"axis\",\r\n        appendToBody: true /* 设置以window为根节点向外浮动 */,\r\n      };\r\n      echarts1option.xAxis = { data: orderData.data1 };\r\n      echarts1option.yAxis = {};\r\n      echarts1option.legend = xAxisData;\r\n\r\n      echarts1option.series = [];\r\n      xAxis.forEach((key) => {\r\n        echarts1option.series.push({\r\n          name: key,\r\n          data: orderData.data.map((item) => item[key]),\r\n          type: \"line\",\r\n        });\r\n      });\r\n      //使用指定的配置项和数据显示图表\r\n      echarts1.setOption(echarts1option);\r\n\r\n      //柱状图\r\n      const echarts2 = echarts.init(this.$refs.echarts2);\r\n      const echarts2option = {\r\n        legend: {\r\n          //图例文字颜色\r\n          textStyle: {\r\n            color: \"#333\",\r\n          },\r\n        },\r\n        grid: {\r\n          left: \"20%\",\r\n        },\r\n        //提示框\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n        },\r\n        xAxis: {\r\n          type: \"category\", //类目轴\r\n          data: userData.map((item) => item.data),\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: \"#17b3a3\",\r\n            },\r\n          },\r\n          axisLabel: {\r\n            interval: 0,\r\n            color: \"#333\",\r\n          },\r\n        },\r\n        yAxis: [\r\n          {\r\n            type: \"value\",\r\n            axisLine: {\r\n              lineStyle: {\r\n                color: \"#17b3a3\",\r\n              },\r\n            },\r\n          },\r\n        ],\r\n        color: [\"#2ec7c9\", \"#b6a2de\"],\r\n        series: [\r\n          {\r\n            name: \"新增用户\",\r\n            data: userData.map((item) => item.new),\r\n            type: \"bar\",\r\n          },\r\n          {\r\n            name: \"活跃用户\",\r\n            data: userData.map((item) => item.active),\r\n            type: \"bar\",\r\n          },\r\n        ],\r\n      };\r\n      //使用指定的配置项和数据显示图表\r\n      echarts2.setOption(echarts2option);\r\n\r\n      //饼状图\r\n      const echarts3 = echarts.init(this.$refs.echarts3);\r\n      const echarts3option = {\r\n        tooltip: {\r\n          trigger: \"item\",\r\n        },\r\n        color: [\r\n          \"#0f78f4\",\r\n          \"#dd536b\",\r\n          \"#9462e5\",\r\n          \"#a6a6a6\",\r\n          \"#e1bb22\",\r\n          \"#39c362\",\r\n          \"#3ed1cf\",\r\n          \"#bce672\",\r\n        ],\r\n        series: [\r\n          {\r\n            data: videoData,\r\n            type: \"pie\",\r\n          },\r\n        ],\r\n      };\r\n      //使用指定的配置项和数据显示图表\r\n      echarts3.setOption(echarts3option);\r\n      //设置图表随着窗口的变动而变动\r\n      window.onresize = function () {\r\n        echarts1.resize();\r\n        echarts2.resize();\r\n        echarts3.resize();\r\n      };\r\n    });\r\n  },\r\n  methods: {\r\n    //获取当前年月日\r\n    getTime() {\r\n      let dt = new Date();\r\n      var y = dt.getFullYear();\r\n      var mt = (dt.getMonth() + 1).toString().padStart(2, \"0\");\r\n      var day = dt.getDate().toString().padStart(2, \"0\");\r\n      this.nowTime = y + \"-\" + mt + \"-\" + day;\r\n    },\r\n  },\r\n  created() {\r\n    this.getTime();\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.user {\r\n  padding-bottom: 20px;\r\n  margin-bottom: 20px;\r\n  border-bottom: 1px solid #ccc;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  img {\r\n    margin-right: 40px;\r\n    height: 150px;\r\n    width: 150px;\r\n    border-radius: 50%;\r\n  }\r\n\r\n  .userinfo {\r\n    .name {\r\n      font-size: 32px;\r\n      margin-bottom: 10px;\r\n    }\r\n\r\n    .access {\r\n      color: #999999;\r\n    }\r\n  }\r\n}\r\n\r\n.login-info {\r\n  p {\r\n    line-height: 28px;\r\n    font-size: 14px;\r\n    color: #999999;\r\n\r\n    span {\r\n      color: #666666;\r\n      margin-left: 60px;\r\n    }\r\n  }\r\n}\r\n\r\n.num {\r\n  display: flex;\r\n  flex-wrap: wrap; //强制换行\r\n  justify-content: space-between;\r\n\r\n  .icon {\r\n    width: 80px;\r\n    height: 80px;\r\n    font-size: 30px;\r\n    text-align: center;\r\n    line-height: 80px;\r\n    color: white;\r\n  }\r\n\r\n  .detail {\r\n    margin-left: 15px;\r\n    display: flex;\r\n    flex-direction: column; //沿主轴上下对齐\r\n    justify-content: center;\r\n\r\n    .price {\r\n      font-size: 30px;\r\n      margin-bottom: 10px;\r\n      line-height: 30px;\r\n      height: 30px;\r\n    }\r\n\r\n    .desc {\r\n      font-size: 14px;\r\n      /* text-align: center; */\r\n      color: #999999;\r\n    }\r\n  }\r\n\r\n  .el-card {\r\n    width: 32%;\r\n    margin-bottom: 20px;\r\n  }\r\n}\r\n\r\n.graph {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  .el-card {\r\n    width: 48%;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";AA4EA,SAAAA,OAAA;AACA,YAAAC,OAAA;AACA;EACAC,KAAA;IACA;MACAC,OAAA;MACA;MACAC,SAAA;QACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MAzCA,CA0CA;MACA;MACAC,UAAA;QACAC,IAAA;QACAC,QAAA;QACAC,QAAA;QACAC,QAAA;MACA;MACA;MACAC,SAAA,GACA;QACAJ,IAAA;QACAK,KAAA;QACAC,IAAA;QACAC,KAAA;MACA,GACA;QACAP,IAAA;QACAK,KAAA;QACAC,IAAA;QACAC,KAAA;MACA,GACA;QACAP,IAAA;QACAK,KAAA;QACAC,IAAA;QACAC,KAAA;MACA,GACA;QACAP,IAAA;QACAK,KAAA;QACAC,IAAA;QACAC,KAAA;MACA,GACA;QACAP,IAAA;QACAK,KAAA;QACAC,IAAA;QACAC,KAAA;MACA,GACA;QACAP,IAAA;QACAK,KAAA;QACAC,IAAA;QACAC,KAAA;MACA;IAEA;EACA;EACAC,QAAA;IACAd,OAAA,GAAAe,IAAA,CAAAC,IAAA;MAAA;QAAAd;MAAA,IAAAc,IAAA;MACA;QAAAZ;MAAA,IAAAF,IAAA,CAAAA,IAAA;MACA,KAAAE,SAAA,GAAAA,SAAA;MACA;MACA,MAAAa,QAAA,GAAAhB,OAAA,CAAAiB,IAAA,MAAAC,KAAA,CAAAF,QAAA;MACA;MACA,IAAAG,cAAA;MACA;MACA;QAAAC,SAAA;QAAAC,QAAA;QAAAC;MAAA,IAAArB,IAAA,CAAAA,IAAA;MACA,MAAAsB,KAAA,GAAAC,MAAA,CAAAC,IAAA,CAAAL,SAAA,CAAAnB,IAAA;MACA,MAAAyB,SAAA;QACAzB,IAAA,EAAAsB;MACA;MAEAJ,cAAA,CAAAQ,OAAA;QACAC,OAAA;QACAC,YAAA;MACA;;MACAV,cAAA,CAAAI,KAAA;QAAAtB,IAAA,EAAAmB,SAAA,CAAAU;MAAA;MACAX,cAAA,CAAAY,KAAA;MACAZ,cAAA,CAAAa,MAAA,GAAAN,SAAA;MAEAP,cAAA,CAAAc,MAAA;MACAV,KAAA,CAAAW,OAAA,CAAAC,GAAA;QACAhB,cAAA,CAAAc,MAAA,CAAAG,IAAA;UACA/B,IAAA,EAAA8B,GAAA;UACAlC,IAAA,EAAAmB,SAAA,CAAAnB,IAAA,CAAAoC,GAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAH,GAAA;UACAI,IAAA;QACA;MACA;MACA;MACAvB,QAAA,CAAAwB,SAAA,CAAArB,cAAA;;MAEA;MACA,MAAAsB,QAAA,GAAAzC,OAAA,CAAAiB,IAAA,MAAAC,KAAA,CAAAuB,QAAA;MACA,MAAAC,cAAA;QACAV,MAAA;UACA;UACAW,SAAA;YACA/B,KAAA;UACA;QACA;QACAgC,IAAA;UACAC,IAAA;QACA;QACA;QACAlB,OAAA;UACAC,OAAA;QACA;QACAL,KAAA;UACAgB,IAAA;UAAA;UACAtC,IAAA,EAAAoB,QAAA,CAAAgB,GAAA,CAAAC,IAAA,IAAAA,IAAA,CAAArC,IAAA;UACA6C,QAAA;YACAC,SAAA;cACAnC,KAAA;YACA;UACA;UACAoC,SAAA;YACAC,QAAA;YACArC,KAAA;UACA;QACA;QACAmB,KAAA,GACA;UACAQ,IAAA;UACAO,QAAA;YACAC,SAAA;cACAnC,KAAA;YACA;UACA;QACA,EACA;QACAA,KAAA;QACAqB,MAAA,GACA;UACA5B,IAAA;UACAJ,IAAA,EAAAoB,QAAA,CAAAgB,GAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAY,GAAA;UACAX,IAAA;QACA,GACA;UACAlC,IAAA;UACAJ,IAAA,EAAAoB,QAAA,CAAAgB,GAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAa,MAAA;UACAZ,IAAA;QACA;MAEA;MACA;MACAE,QAAA,CAAAD,SAAA,CAAAE,cAAA;;MAEA;MACA,MAAAU,QAAA,GAAApD,OAAA,CAAAiB,IAAA,MAAAC,KAAA,CAAAkC,QAAA;MACA,MAAAC,cAAA;QACA1B,OAAA;UACAC,OAAA;QACA;QACAhB,KAAA,GACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA;QACAqB,MAAA,GACA;UACAhC,IAAA,EAAAqB,SAAA;UACAiB,IAAA;QACA;MAEA;MACA;MACAa,QAAA,CAAAZ,SAAA,CAAAa,cAAA;MACA;MACAC,MAAA,CAAAC,QAAA;QACAvC,QAAA,CAAAwC,MAAA;QACAf,QAAA,CAAAe,MAAA;QACAJ,QAAA,CAAAI,MAAA;MACA;IACA;EACA;EACAC,OAAA;IACA;IACAC,QAAA;MACA,IAAAC,EAAA,OAAAC,IAAA;MACA,IAAAC,CAAA,GAAAF,EAAA,CAAAG,WAAA;MACA,IAAAC,EAAA,IAAAJ,EAAA,CAAAK,QAAA,QAAAC,QAAA,GAAAC,QAAA;MACA,IAAAC,GAAA,GAAAR,EAAA,CAAAS,OAAA,GAAAH,QAAA,GAAAC,QAAA;MACA,KAAAhE,OAAA,GAAA2D,CAAA,SAAAE,EAAA,SAAAI,GAAA;IACA;EACA;EACAE,QAAA;IACA,KAAAX,OAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}